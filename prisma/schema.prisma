// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  name        String @unique
  chats    Chat[]
  created_at  DateTime? @default(now())
  updated_at  DateTime?

  @@map("users")
}

model Persona {
  id           Int       @id @default(autoincrement())
  name         String
  systemPrompt String
  chats     Chat[]

  @@map("personas")
}

model Chat {
  id        String      @id @default(uuid())

  user_id   String
  user      User @relation(fields: [user_id], references: [id])
  persona_id Int
  Persona   Persona  @relation(fields: [persona_id], references: [id])

  message_items MessageItem[]

  created_at DateTime @default(now())

  @@map("chats")
}

model MessageItem {
  id Int @id @default(autoincrement())
  content String
  reply String
  latency String?

  chat_id String
  message Chat @relation(fields: [chat_id], references: [id])

  created_at DateTime @default(now())

  @@map("message_items")
}
